workflow:
  rules:
    - if: $CI_COMMIT_BRANCH != "cicd" && $CI_PIPELINE_SOURCE != "merge_request_event"
      when: never
    - when: always

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

stages:
  - test
  - build

sonarcloud-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner


build_core_test:
  image: docker:20
  services:
    - name: docker:20-dind
      alias: docker
  stage: build
  variables:
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -f docker/Dockerfile -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    - docker push $CI_REGISTRY_IMAGE:latest

#release_develop_core_test:
#  stage: release
#  image: docker:20
#  cache: []
#  services:
#    - name: docker:20-dind
#      alias: docker
#  variables:
#    DOCKER_DRIVER: overlay2
#  before_script:
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#  script:
#    - docker tag core-test-django:latest $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#    - docker tag core-test-django:latest $CI_REGISTRY_IMAGE:latest
#    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
#    - docker push $CI_REGISTRY_IMAGE:latest